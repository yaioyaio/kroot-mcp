name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.19.1'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Package release
      run: |
        mkdir -p release
        cp -r dist release/
        cp package*.json release/
        cp README.md release/
        cp -r docs release/
        cp -r config release/
        cp .env.example release/
        tar -czf devflow-monitor-${{ github.ref_name }}.tar.gz release/
        zip -r devflow-monitor-${{ github.ref_name }}.zip release/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: |
          devflow-monitor-*.tar.gz
          devflow-monitor-*.zip

  docker:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, docker]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: release-artifacts
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        cat > CHANGELOG.md << 'EOF'
        # Release ${{ steps.version.outputs.VERSION }}
        
        ## What's Changed
        
        ### Features
        - Docker support for easy deployment
        - Environment-based configuration system
        - CI/CD pipeline with GitHub Actions
        - Automated testing and security scanning
        
        ### Improvements
        - Performance optimizations
        - Enhanced security features
        - Better error handling
        
        ### Bug Fixes
        - Various stability improvements
        
        ## Installation
        
        ### Using Docker
        ```bash
        docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}
        ```
        
        ### Manual Installation
        Download the release archive and follow the installation guide.
        
        ## Documentation
        See the [documentation](https://github.com/${{ github.repository }}/tree/${{ steps.version.outputs.VERSION }}/docs) for detailed instructions.
        EOF
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: DevFlow Monitor ${{ steps.version.outputs.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
        files: |
          devflow-monitor-*.tar.gz
          devflow-monitor-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}